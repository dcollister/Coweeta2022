function [quantileValues]=createPdfPlotFigure(X1, Y1,figname,picname,pd,TitleString,VecOfNote,TableOfInterest)
% make a custom colormap
% n = 100; % how many levels do you want?
% cvu = linspace(0,1,n).';
% cvd = flipud(cvu);
% cmap = [cvu cvu cvd];
% N = 100; % how many points to plot?
% x=linspace(0,10,N);
% y=linspace(0,10,N);
% z = sin(linspace(-pi/2,pi/2,N)); % i picked something else
% % instead of using plot(), use surf()
% % because it can do color interpolation
% h = surf([x(:) x(:)],[y(:) y(:)],[z(:) z(:)]);
% set(h,'facecolor','none','edgecolor','interp');
% set(h,'linewidth',3); % make it fat so it's easier to demonstrate
% view(2); % only show 2-D view
% colormap(cmap);
% colorbar
    % CleanedVec1=rmoutliers(VecOfNote,'percentiles', [2.5 97.5]);
    % CleanedVec2=rmoutliers(VecOfNote,'percentiles', [5 95]);
    % CleanedVec3=rmoutliers(VecOfNote,'percentiles', [10 90]);
    quantileValues=quantile(VecOfNote,[0.025 0.05 0.25 0.50 0.75 0.95 0.975]);
    type='All';
    NinetyFive=quantileValues(6);
    NinetyFiveVecIDs=find(VecOfNote>=NinetyFive);
    NinetyFiveVec=VecOfNote(VecOfNote>=NinetyFive);
    meanVal=mean(VecOfNote);
    varVal=var(VecOfNote);
    STDVal=std(VecOfNote);
    BirthAgVec=VecOfNote(ismember(TableOfInterest.DeathType,'Reproducing Agent'));
    EnvAgsVec=VecOfNote(ismember(TableOfInterest.DeathType,'Death From Environment'));
    BndAgsVec=VecOfNote(ismember(TableOfInterest.DeathType,'Boundary Escape'));
    VecSet={BirthAgVec, EnvAgsVec, BndAgsVec};
    heightSet=[height(BirthAgVec) height(EnvAgsVec) height(BndAgsVec)];
    [heightVal,heighId]=sort(heightSet,'descend');
    trimMeanVal1= trimmean(VecOfNote,5);
    vtrimVal1 = var(trimMeanVal1);
    efficiency1 = varVal/vtrimVal1;

    trimMeanVal2= trimmean(VecOfNote,10);
    vtrimVal2 = var(trimMeanVal2);
    efficiency2 = varVal/vtrimVal2;

    trimMeanVal3= trimmean(VecOfNote,20);
    vtrimVal3 = var(trimMeanVal3);
    efficiency3 = varVal/vtrimVal3;

    meanXColsVal=meanVal/max(VecOfNote);
    meanDims = [meanXColsVal meanXColsVal*1.1];
    InsideDims = [0.025 0.975];
    InsideString=strcat('97.5\% of the population with \newline $\overline{X}_{', type, '}=', num2str(meanVal), ', and \newline standard deviation S =', num2str(STDVal), '.');
    efficiencyDims=[0.55 0.75 0.80 0.80];
    %CREATEFIGURE(X1, Y1)
    %  X1:  vector of x data
    %  Y1:  vector of y data

    %  Auto-generated by MATLAB on 09-Dec-2021 14:32:00

    if ~isfile(figname)
    % Create figure
    pdfFig = figure('WindowState','maximized');
    %     hold on
    % Create axes
    axespdfFig = axes('Parent',pdfFig);
    hold(axespdfFig,'on');
    % Create plot 
    allAgentsHisto=histogram(axespdfFig,VecOfNote);
    NinetyFiveHisto=histogram(axespdfFig,NinetyFiveVec,'BinEdges',allAgentsHisto.BinEdges);
%     BirthAgHisto=histogram(axespdfFig,VecSet{heighId(1)},'BinEdges',allAgentsHisto.BinEdges);
%     EnvAgsHisto=histogram(axespdfFig,VecSet{heighId(2)},'BinEdges',allAgentsHisto.BinEdges);
%     BndAgsHisto=histogram(axespdfFig,VecSet{heighId(3)},'BinEdges',allAgentsHisto.BinEdges);
%     allAgentsHisto.FaceColor=[110/255,10/255,245/255];%6E0AF5 %Electric Indigo
    allAgentsHisto.FaceColor=[0/255,171/255,231/255];%00ABE7 %Electric Indigo
    NinetyFiveHisto.FaceColor=[17/255,157/255,164/255];%119DA4 %Viridian Green

    
    freqMeanVal=allAgentsHisto.Values(floor(meanVal/allAgentsHisto.BinWidth)+1);
    freqNineFiveVal=allAgentsHisto.Values(floor(NinetyFive/allAgentsHisto.BinWidth)+1);

    freqMax=max(allAgentsHisto.Values)*0.9;
    MeanRightBinVal=allAgentsHisto.BinEdges(floor(meanVal/allAgentsHisto.BinWidth)+2);
    NinetyFiveRightBinVal=allAgentsHisto.BinEdges(floor(NinetyFive/allAgentsHisto.BinWidth)+2);

    rectangle(axespdfFig,'Position',[meanVal 0 max(3,(MeanRightBinVal-meanVal)) freqMeanVal],'FaceColor', 'black');
    rectangle(axespdfFig,'Position',[NinetyFive 0 max(3,(NinetyFiveRightBinVal-NinetyFive)) freqNineFiveVal],'FaceColor', 'red');

    %% Mean Line
    meanValStr=strcat('$\overline{X}_{',type,'}$ = ',num2str(meanVal), ' meters');
    [pdfFig]=makeIdentifierLines(pdfFig,axespdfFig,meanVal,meanVal,freqMax,freqMeanVal,meanValStr,'black');

    %% Top Performers Line
    NinetyFiveString=strcat('95% threshold = ', num2str(NinetyFive), ' meters');
    [pdfFig]=makeIdentifierLines(pdfFig,axespdfFig,NinetyFive,NinetyFive,freqNineFiveVal+(freqMax-freqMeanVal),freqNineFiveVal,NinetyFiveString,'red');
    
    % Create xlabel
    xlabel({'Maximum Distance'});
    ylabel({'Frequency Count Of Population'});
    % Create title
    title(TitleString);
    muString=strcat('$\overline{X}_{',type,'}$ = ',num2str(pd.mu), ' meters');
    StdString=strcat('S$_{',type,'}$ = ',num2str(pd.sigma), ' meters');
    box(axespdfFig,'on');
    hold(axespdfFig,'off');
    allAgentsHistoLabelTemp=strcat(muString, '$\qquad$', StdString) ;
    NinetyFiveHistoLabelTemp='Top performering agents measured by maximum distances achieved.' ;
    legend(axespdfFig,allAgentsHisto,allAgentsHistoLabelTemp,NinetyFiveHistoLabelTemp,'show','interpreter','latex','FontSize',14);
% set(h,'facecolor','none','edgecolor','interp');
% set(h,'linewidth',3); % make it fat so it's easier to demonstrate
% view(2); % only show 2-D view
% colormap(cmap);
% colorbar




    %     allMeanMarker=line(axes1,[meanVal,meanVal],[X1(1),yMeanVal],'Color','yellow');
    %     annotation('textarrow',meanDims,[.9,.9],'String',['\bar x =' num2str(meanVal)],'FontSize',16,'Color','k');%t1 = text([meanVal 1.5*meanVal],(X1(end)-0.05*X1(end)),['\leftarrow \overline{X} =' num2str(meanVal)],'FontSize',16,'Color','k')
    %     annotation('doublearrow',InsideDims,[.7,.7]);%t1 = text([meanVal 1.5*meanVal],(X1(end)-0.05*X1(end)),['\leftarrow \overline{X} =' num2str(meanVal)],'FontSize',16,'Color','k')
    %     ``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````    annotation('textbox',efficiencyDims,'String',InsideString,'FitBoxToText','on');
    %
    % Finally, link the axis properties and turn off axis #2.
    %     axes2.UserData = linkprop([axes1,axes2],{'Position','InnerPosition','DataAspectRatio','xtick','ytick','ydir','xdir','xlim','ylim'}); % add more props as needed
    %     axes2.Visible = 'off';
    % Create ylabel
    savefig(pdfFig,figname,'compact');
    saveas(pdfFig,picname);
    end
